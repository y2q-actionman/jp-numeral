;;; -*- coding: utf-8; -*-

(in-package :jp-numeral.test)

(defun jp-str/p (num &key digits-after-dot
		 scale radix-point)
  (with-output-to-string (stream)
    (jp-numeral:jp stream num t t
		   digits-after-dot scale radix-point)))

(defun equal-or-free-format (expect number)
  (let ((actual-string (jp-str/p number)))
    (or (equal expect actual-string)
	(format nil "~F" number))))

(defun test-jp-positional-integer-4digits ()
  ;; 0
  (assert (equal "〇" (jp-str/p 0)))
  ;; 1-9
  (assert (equal "一" (jp-str/p 1)))
  (assert (equal "二" (jp-str/p 2)))
  (assert (equal "三" (jp-str/p 3)))
  (assert (equal "四" (jp-str/p 4)))
  (assert (equal "五" (jp-str/p 5)))
  (assert (equal "六" (jp-str/p 6)))
  (assert (equal "七" (jp-str/p 7)))
  (assert (equal "八" (jp-str/p 8)))
  (assert (equal "九" (jp-str/p 9)))
  ;; 10-19
  (assert (equal "一〇" (jp-str/p 10)))
  (assert (equal "一一" (jp-str/p 11)))
  (assert (equal "一二" (jp-str/p 12)))
  (assert (equal "一三" (jp-str/p 13)))
  (assert (equal "一四" (jp-str/p 14)))
  (assert (equal "一五" (jp-str/p 15)))
  (assert (equal "一六" (jp-str/p 16)))
  (assert (equal "一七" (jp-str/p 17)))
  (assert (equal "一八" (jp-str/p 18)))
  (assert (equal "一九" (jp-str/p 19)))
  ;; 20-99
  (assert (equal "二〇" (jp-str/p 20)))
  (assert (equal "二一" (jp-str/p 21)))
  (assert (equal "二九" (jp-str/p 29)))
  (assert (equal "三〇" (jp-str/p 30)))
  (assert (equal "三一" (jp-str/p 31)))
  (assert (equal "三九" (jp-str/p 39)))
  (assert (equal "四〇" (jp-str/p 40)))
  (assert (equal "四一" (jp-str/p 41)))
  (assert (equal "四九" (jp-str/p 49)))
  (assert (equal "五〇" (jp-str/p 50)))
  (assert (equal "五一" (jp-str/p 51)))
  (assert (equal "五九" (jp-str/p 59)))
  (assert (equal "六〇" (jp-str/p 60)))
  (assert (equal "六一" (jp-str/p 61)))
  (assert (equal "六九" (jp-str/p 69)))
  (assert (equal "七〇" (jp-str/p 70)))
  (assert (equal "七一" (jp-str/p 71)))
  (assert (equal "七九" (jp-str/p 79)))
  (assert (equal "八〇" (jp-str/p 80)))
  (assert (equal "八一" (jp-str/p 81)))
  (assert (equal "八九" (jp-str/p 89)))
  (assert (equal "九〇" (jp-str/p 90)))
  (assert (equal "九一" (jp-str/p 91)))
  (assert (equal "九九" (jp-str/p 99)))
  ;; 100
  (assert (equal "一〇〇" (jp-str/p 100)))
  ;; 101-109
  (assert (equal "一〇一" (jp-str/p 101)))
  (assert (equal "一〇二" (jp-str/p 102)))
  (assert (equal "一〇三" (jp-str/p 103)))
  (assert (equal "一〇四" (jp-str/p 104)))
  (assert (equal "一〇五" (jp-str/p 105)))
  (assert (equal "一〇六" (jp-str/p 106)))
  (assert (equal "一〇七" (jp-str/p 107)))
  (assert (equal "一〇八" (jp-str/p 108)))
  (assert (equal "一〇九" (jp-str/p 109)))
  ;; 110-119
  (assert (equal "一一〇" (jp-str/p 110)))
  (assert (equal "一一一" (jp-str/p 111)))
  (assert (equal "一一二" (jp-str/p 112)))
  (assert (equal "一一三" (jp-str/p 113)))
  (assert (equal "一一四" (jp-str/p 114)))
  (assert (equal "一一五" (jp-str/p 115)))
  (assert (equal "一一六" (jp-str/p 116)))
  (assert (equal "一一七" (jp-str/p 117)))
  (assert (equal "一一八" (jp-str/p 118)))
  (assert (equal "一一九" (jp-str/p 119)))
  ;; 120-199
  (assert (equal "一二〇" (jp-str/p 120)))
  (assert (equal "一二一" (jp-str/p 121)))
  (assert (equal "一二九" (jp-str/p 129)))
  (assert (equal "一三〇" (jp-str/p 130)))
  (assert (equal "一三一" (jp-str/p 131)))
  (assert (equal "一三九" (jp-str/p 139)))
  (assert (equal "一四〇" (jp-str/p 140)))
  (assert (equal "一四一" (jp-str/p 141)))
  (assert (equal "一四九" (jp-str/p 149)))
  (assert (equal "一五〇" (jp-str/p 150)))
  (assert (equal "一五一" (jp-str/p 151)))
  (assert (equal "一五九" (jp-str/p 159)))
  (assert (equal "一六〇" (jp-str/p 160)))
  (assert (equal "一六一" (jp-str/p 161)))
  (assert (equal "一六九" (jp-str/p 169)))
  (assert (equal "一七〇" (jp-str/p 170)))
  (assert (equal "一七一" (jp-str/p 171)))
  (assert (equal "一七九" (jp-str/p 179)))
  (assert (equal "一八〇" (jp-str/p 180)))
  (assert (equal "一八一" (jp-str/p 181)))
  (assert (equal "一八九" (jp-str/p 189)))
  (assert (equal "一九〇" (jp-str/p 190)))
  (assert (equal "一九一" (jp-str/p 191)))
  (assert (equal "一九九" (jp-str/p 199)))
  ;; 200-999
  (assert (equal "二〇〇" (jp-str/p 200)))
  (assert (equal "二〇一" (jp-str/p 201)))
  (assert (equal "二〇九" (jp-str/p 209)))
  (assert (equal "二一〇" (jp-str/p 210)))
  (assert (equal "二一一" (jp-str/p 211)))
  (assert (equal "二一九" (jp-str/p 219)))
  (assert (equal "二二〇" (jp-str/p 220)))
  (assert (equal "二二一" (jp-str/p 221)))
  (assert (equal "二九九" (jp-str/p 299)))
  (assert (equal "三〇〇" (jp-str/p 300)))
  (assert (equal "三〇一" (jp-str/p 301)))
  (assert (equal "三〇九" (jp-str/p 309)))
  (assert (equal "三一〇" (jp-str/p 310)))
  (assert (equal "三一一" (jp-str/p 311)))
  (assert (equal "三一九" (jp-str/p 319)))
  (assert (equal "三二〇" (jp-str/p 320)))
  (assert (equal "三二一" (jp-str/p 321)))
  (assert (equal "三九九" (jp-str/p 399)))
  (assert (equal "四〇〇" (jp-str/p 400)))
  (assert (equal "四〇一" (jp-str/p 401)))
  (assert (equal "四〇九" (jp-str/p 409)))
  (assert (equal "四一〇" (jp-str/p 410)))
  (assert (equal "四一一" (jp-str/p 411)))
  (assert (equal "四一九" (jp-str/p 419)))
  (assert (equal "四二〇" (jp-str/p 420)))
  (assert (equal "四二一" (jp-str/p 421)))
  (assert (equal "四九九" (jp-str/p 499)))
  (assert (equal "五〇〇" (jp-str/p 500)))
  (assert (equal "五〇一" (jp-str/p 501)))
  (assert (equal "五〇九" (jp-str/p 509)))
  (assert (equal "五一〇" (jp-str/p 510)))
  (assert (equal "五一一" (jp-str/p 511)))
  (assert (equal "五一九" (jp-str/p 519)))
  (assert (equal "五二〇" (jp-str/p 520)))
  (assert (equal "五二一" (jp-str/p 521)))
  (assert (equal "五九九" (jp-str/p 599)))
  (assert (equal "六〇〇" (jp-str/p 600)))
  (assert (equal "六〇一" (jp-str/p 601)))
  (assert (equal "六〇九" (jp-str/p 609)))
  (assert (equal "六一〇" (jp-str/p 610)))
  (assert (equal "六一一" (jp-str/p 611)))
  (assert (equal "六一九" (jp-str/p 619)))
  (assert (equal "六二〇" (jp-str/p 620)))
  (assert (equal "六二一" (jp-str/p 621)))
  (assert (equal "六九九" (jp-str/p 699)))
  (assert (equal "七〇〇" (jp-str/p 700)))
  (assert (equal "七〇一" (jp-str/p 701)))
  (assert (equal "七〇九" (jp-str/p 709)))
  (assert (equal "七一〇" (jp-str/p 710)))
  (assert (equal "七一一" (jp-str/p 711)))
  (assert (equal "七一九" (jp-str/p 719)))
  (assert (equal "七二〇" (jp-str/p 720)))
  (assert (equal "七二一" (jp-str/p 721)))
  (assert (equal "七九九" (jp-str/p 799)))
  (assert (equal "八〇〇" (jp-str/p 800)))
  (assert (equal "八〇一" (jp-str/p 801)))
  (assert (equal "八〇九" (jp-str/p 809)))
  (assert (equal "八一〇" (jp-str/p 810)))
  (assert (equal "八一一" (jp-str/p 811)))
  (assert (equal "八一九" (jp-str/p 819)))
  (assert (equal "八二〇" (jp-str/p 820)))
  (assert (equal "八二一" (jp-str/p 821)))
  (assert (equal "八九九" (jp-str/p 899)))
  (assert (equal "九〇〇" (jp-str/p 900)))
  (assert (equal "九〇一" (jp-str/p 901)))
  (assert (equal "九〇九" (jp-str/p 909)))
  (assert (equal "九一〇" (jp-str/p 910)))
  (assert (equal "九一一" (jp-str/p 911)))
  (assert (equal "九一九" (jp-str/p 919)))
  (assert (equal "九二〇" (jp-str/p 920)))
  (assert (equal "九二一" (jp-str/p 921)))
  (assert (equal "九九九" (jp-str/p 999)))
  ;; 1000 - 1099
  (assert (equal "一〇〇〇" (jp-str/p 1000)))
  (assert (equal "一〇〇一" (jp-str/p 1001)))
  (assert (equal "一〇〇二" (jp-str/p 1002)))
  (assert (equal "一〇〇九" (jp-str/p 1009)))
  (assert (equal "一〇一〇" (jp-str/p 1010)))
  (assert (equal "一〇一一" (jp-str/p 1011)))
  (assert (equal "一〇一九" (jp-str/p 1019)))
  (assert (equal "一〇二〇" (jp-str/p 1020)))
  (assert (equal "一〇二一" (jp-str/p 1021)))
  (assert (equal "一〇二九" (jp-str/p 1029)))
  (assert (equal "一〇三〇" (jp-str/p 1030)))
  (assert (equal "一〇九九" (jp-str/p 1099)))
  ;; 1100 - 9999
  (assert (equal "一一〇〇" (jp-str/p 1100)))
  (assert (equal "一一〇一" (jp-str/p 1101)))
  (assert (equal "一一〇九" (jp-str/p 1109)))
  (assert (equal "一一一〇" (jp-str/p 1110)))
  (assert (equal "一一一一" (jp-str/p 1111)))
  (assert (equal "一一一九" (jp-str/p 1119)))
  (assert (equal "一一二〇" (jp-str/p 1120)))
  (assert (equal "一一二一" (jp-str/p 1121)))
  (assert (equal "一一二九" (jp-str/p 1129)))
  (assert (equal "一一九九" (jp-str/p 1199)))
  (assert (equal "一二〇〇" (jp-str/p 1200)))
  (assert (equal "一二〇一" (jp-str/p 1201)))
  (assert (equal "一二〇九" (jp-str/p 1209)))
  (assert (equal "一二一〇" (jp-str/p 1210)))
  (assert (equal "一二一一" (jp-str/p 1211)))
  (assert (equal "一二一九" (jp-str/p 1219)))
  (assert (equal "一二二〇" (jp-str/p 1220)))
  (assert (equal "一二二一" (jp-str/p 1221)))
  (assert (equal "一二二九" (jp-str/p 1229)))
  (assert (equal "一二九九" (jp-str/p 1299)))
  (assert (equal "一九〇〇" (jp-str/p 1900)))
  (assert (equal "一九〇一" (jp-str/p 1901)))
  (assert (equal "一九〇九" (jp-str/p 1909)))
  (assert (equal "一九一〇" (jp-str/p 1910)))
  (assert (equal "一九一一" (jp-str/p 1911)))
  (assert (equal "一九一九" (jp-str/p 1919)))
  (assert (equal "一九二〇" (jp-str/p 1920)))
  (assert (equal "一九二一" (jp-str/p 1921)))
  (assert (equal "一九二九" (jp-str/p 1929)))
  (assert (equal "一九九九" (jp-str/p 1999)))
  ;; 2000 - 9999
  (assert (equal "二〇〇〇" (jp-str/p 2000)))
  (assert (equal "二〇〇一" (jp-str/p 2001)))
  (assert (equal "二〇一〇" (jp-str/p 2010)))
  (assert (equal "二〇一一" (jp-str/p 2011)))
  (assert (equal "二〇二〇" (jp-str/p 2020)))
  (assert (equal "二〇二一" (jp-str/p 2021)))
  (assert (equal "二一〇〇" (jp-str/p 2100)))
  (assert (equal "二一〇一" (jp-str/p 2101)))
  (assert (equal "二一一〇" (jp-str/p 2110)))
  (assert (equal "二一一一" (jp-str/p 2111)))
  (assert (equal "二一二〇" (jp-str/p 2120)))
  (assert (equal "二一二一" (jp-str/p 2121)))
  (assert (equal "二二〇〇" (jp-str/p 2200)))
  (assert (equal "二二〇一" (jp-str/p 2201)))
  (assert (equal "二二一〇" (jp-str/p 2210)))
  (assert (equal "二二一一" (jp-str/p 2211)))
  (assert (equal "二二二〇" (jp-str/p 2220)))
  (assert (equal "二二二一" (jp-str/p 2221)))
  (assert (equal "三〇〇〇" (jp-str/p 3000)))
  (assert (equal "三〇〇一" (jp-str/p 3001)))
  (assert (equal "三〇一〇" (jp-str/p 3010)))
  (assert (equal "三〇一一" (jp-str/p 3011)))
  (assert (equal "三〇二〇" (jp-str/p 3020)))
  (assert (equal "三〇二一" (jp-str/p 3021)))
  (assert (equal "三一〇〇" (jp-str/p 3100)))
  (assert (equal "三一〇一" (jp-str/p 3101)))
  (assert (equal "三一一〇" (jp-str/p 3110)))
  (assert (equal "三一一一" (jp-str/p 3111)))
  (assert (equal "三一二〇" (jp-str/p 3120)))
  (assert (equal "三一二一" (jp-str/p 3121)))
  (assert (equal "三二〇〇" (jp-str/p 3200)))
  (assert (equal "三二〇一" (jp-str/p 3201)))
  (assert (equal "三二一〇" (jp-str/p 3210)))
  (assert (equal "三二一一" (jp-str/p 3211)))
  (assert (equal "三二二〇" (jp-str/p 3220)))
  (assert (equal "三二二一" (jp-str/p 3221)))
  (assert (equal "四〇〇〇" (jp-str/p 4000)))
  (assert (equal "四〇〇一" (jp-str/p 4001)))
  (assert (equal "四〇一〇" (jp-str/p 4010)))
  (assert (equal "四〇一一" (jp-str/p 4011)))
  (assert (equal "四〇二〇" (jp-str/p 4020)))
  (assert (equal "四〇二一" (jp-str/p 4021)))
  (assert (equal "四一〇〇" (jp-str/p 4100)))
  (assert (equal "四一〇一" (jp-str/p 4101)))
  (assert (equal "四一一〇" (jp-str/p 4110)))
  (assert (equal "四一一一" (jp-str/p 4111)))
  (assert (equal "四一二〇" (jp-str/p 4120)))
  (assert (equal "四一二一" (jp-str/p 4121)))
  (assert (equal "四二〇〇" (jp-str/p 4200)))
  (assert (equal "四二〇一" (jp-str/p 4201)))
  (assert (equal "四二一〇" (jp-str/p 4210)))
  (assert (equal "四二一一" (jp-str/p 4211)))
  (assert (equal "四二二〇" (jp-str/p 4220)))
  (assert (equal "四二二一" (jp-str/p 4221)))
  (assert (equal "五〇〇〇" (jp-str/p 5000)))
  (assert (equal "五〇〇一" (jp-str/p 5001)))
  (assert (equal "五〇一〇" (jp-str/p 5010)))
  (assert (equal "五〇一一" (jp-str/p 5011)))
  (assert (equal "五〇二〇" (jp-str/p 5020)))
  (assert (equal "五〇二一" (jp-str/p 5021)))
  (assert (equal "五一〇〇" (jp-str/p 5100)))
  (assert (equal "五一〇一" (jp-str/p 5101)))
  (assert (equal "五一一〇" (jp-str/p 5110)))
  (assert (equal "五一一一" (jp-str/p 5111)))
  (assert (equal "五一二〇" (jp-str/p 5120)))
  (assert (equal "五一二一" (jp-str/p 5121)))
  (assert (equal "五二〇〇" (jp-str/p 5200)))
  (assert (equal "五二〇一" (jp-str/p 5201)))
  (assert (equal "五二一〇" (jp-str/p 5210)))
  (assert (equal "五二一一" (jp-str/p 5211)))
  (assert (equal "五二二〇" (jp-str/p 5220)))
  (assert (equal "五二二一" (jp-str/p 5221)))
  (assert (equal "六〇〇〇" (jp-str/p 6000)))
  (assert (equal "六〇〇一" (jp-str/p 6001)))
  (assert (equal "六〇一〇" (jp-str/p 6010)))
  (assert (equal "六〇一一" (jp-str/p 6011)))
  (assert (equal "六〇二〇" (jp-str/p 6020)))
  (assert (equal "六〇二一" (jp-str/p 6021)))
  (assert (equal "六一〇〇" (jp-str/p 6100)))
  (assert (equal "六一〇一" (jp-str/p 6101)))
  (assert (equal "六一一〇" (jp-str/p 6110)))
  (assert (equal "六一一一" (jp-str/p 6111)))
  (assert (equal "六一二〇" (jp-str/p 6120)))
  (assert (equal "六一二一" (jp-str/p 6121)))
  (assert (equal "六二〇〇" (jp-str/p 6200)))
  (assert (equal "六二〇一" (jp-str/p 6201)))
  (assert (equal "六二一〇" (jp-str/p 6210)))
  (assert (equal "六二一一" (jp-str/p 6211)))
  (assert (equal "六二二〇" (jp-str/p 6220)))
  (assert (equal "六二二一" (jp-str/p 6221)))
  (assert (equal "七〇〇〇" (jp-str/p 7000)))
  (assert (equal "七〇〇一" (jp-str/p 7001)))
  (assert (equal "七〇一〇" (jp-str/p 7010)))
  (assert (equal "七〇一一" (jp-str/p 7011)))
  (assert (equal "七〇二〇" (jp-str/p 7020)))
  (assert (equal "七〇二一" (jp-str/p 7021)))
  (assert (equal "七一〇〇" (jp-str/p 7100)))
  (assert (equal "七一〇一" (jp-str/p 7101)))
  (assert (equal "七一一〇" (jp-str/p 7110)))
  (assert (equal "七一一一" (jp-str/p 7111)))
  (assert (equal "七一二〇" (jp-str/p 7120)))
  (assert (equal "七一二一" (jp-str/p 7121)))
  (assert (equal "七二〇〇" (jp-str/p 7200)))
  (assert (equal "七二〇一" (jp-str/p 7201)))
  (assert (equal "七二一〇" (jp-str/p 7210)))
  (assert (equal "七二一一" (jp-str/p 7211)))
  (assert (equal "七二二〇" (jp-str/p 7220)))
  (assert (equal "七二二一" (jp-str/p 7221)))
  (assert (equal "八〇〇〇" (jp-str/p 8000)))
  (assert (equal "八〇〇一" (jp-str/p 8001)))
  (assert (equal "八〇一〇" (jp-str/p 8010)))
  (assert (equal "八〇一一" (jp-str/p 8011)))
  (assert (equal "八〇二〇" (jp-str/p 8020)))
  (assert (equal "八〇二一" (jp-str/p 8021)))
  (assert (equal "八一〇〇" (jp-str/p 8100)))
  (assert (equal "八一〇一" (jp-str/p 8101)))
  (assert (equal "八一一〇" (jp-str/p 8110)))
  (assert (equal "八一一一" (jp-str/p 8111)))
  (assert (equal "八一二〇" (jp-str/p 8120)))
  (assert (equal "八一二一" (jp-str/p 8121)))
  (assert (equal "八二〇〇" (jp-str/p 8200)))
  (assert (equal "八二〇一" (jp-str/p 8201)))
  (assert (equal "八二一〇" (jp-str/p 8210)))
  (assert (equal "八二一一" (jp-str/p 8211)))
  (assert (equal "八二二〇" (jp-str/p 8220)))
  (assert (equal "八二二一" (jp-str/p 8221)))
  (assert (equal "九〇〇〇" (jp-str/p 9000)))
  (assert (equal "九〇〇一" (jp-str/p 9001)))
  (assert (equal "九〇一〇" (jp-str/p 9010)))
  (assert (equal "九〇一一" (jp-str/p 9011)))
  (assert (equal "九〇二〇" (jp-str/p 9020)))
  (assert (equal "九〇二一" (jp-str/p 9021)))
  (assert (equal "九一〇〇" (jp-str/p 9100)))
  (assert (equal "九一〇一" (jp-str/p 9101)))
  (assert (equal "九一一〇" (jp-str/p 9110)))
  (assert (equal "九一一一" (jp-str/p 9111)))
  (assert (equal "九一二〇" (jp-str/p 9120)))
  (assert (equal "九一二一" (jp-str/p 9121)))
  (assert (equal "九二〇〇" (jp-str/p 9200)))
  (assert (equal "九二〇一" (jp-str/p 9201)))
  (assert (equal "九二一〇" (jp-str/p 9210)))
  (assert (equal "九二一一" (jp-str/p 9211)))
  (assert (equal "九二二〇" (jp-str/p 9220)))
  (assert (equal "九二二一" (jp-str/p 9221)))
  (assert (equal "九九九九" (jp-str/p 9999)))
  ;; 
  t)

(defun test-jp-positional-integer-bignums ()
  ;; 10000 - 19999
  (assert (equal "一〇〇〇〇" (jp-str/p 10000)))
  (assert (equal "一〇〇〇一" (jp-str/p 10001)))
  (assert (equal "一〇〇〇九" (jp-str/p 10009)))
  (assert (equal "一〇〇一〇" (jp-str/p 10010)))
  (assert (equal "一〇〇一一" (jp-str/p 10011)))
  (assert (equal "一〇〇一九" (jp-str/p 10019)))
  (assert (equal "一〇〇二〇" (jp-str/p 10020)))
  (assert (equal "一〇〇二一" (jp-str/p 10021)))
  (assert (equal "一〇〇二九" (jp-str/p 10029)))
  (assert (equal "一〇一〇〇" (jp-str/p 10100)))
  (assert (equal "一〇一〇一" (jp-str/p 10101)))
  (assert (equal "一〇一〇九" (jp-str/p 10109)))
  (assert (equal "一〇一一〇" (jp-str/p 10110)))
  (assert (equal "一〇一一一" (jp-str/p 10111)))
  (assert (equal "一〇一一九" (jp-str/p 10119)))
  (assert (equal "一〇一二〇" (jp-str/p 10120)))
  (assert (equal "一〇一二一" (jp-str/p 10121)))
  (assert (equal "一〇一二九" (jp-str/p 10129)))
  (assert (equal "一〇二〇〇" (jp-str/p 10200)))
  (assert (equal "一〇二〇一" (jp-str/p 10201)))
  (assert (equal "一〇二〇九" (jp-str/p 10209)))
  (assert (equal "一〇二一〇" (jp-str/p 10210)))
  (assert (equal "一〇二一一" (jp-str/p 10211)))
  (assert (equal "一〇二一九" (jp-str/p 10219)))
  (assert (equal "一〇二二〇" (jp-str/p 10220)))
  (assert (equal "一〇二二一" (jp-str/p 10221)))
  (assert (equal "一〇二二九" (jp-str/p 10229)))
  (assert (equal "一一〇〇〇" (jp-str/p 11000)))
  (assert (equal "一一〇〇一" (jp-str/p 11001)))
  (assert (equal "一一〇〇九" (jp-str/p 11009)))
  (assert (equal "一一〇一〇" (jp-str/p 11010)))
  (assert (equal "一一〇一一" (jp-str/p 11011)))
  (assert (equal "一一〇一九" (jp-str/p 11019)))
  (assert (equal "一一〇二〇" (jp-str/p 11020)))
  (assert (equal "一一〇二一" (jp-str/p 11021)))
  (assert (equal "一一〇二九" (jp-str/p 11029)))
  (assert (equal "一一一〇〇" (jp-str/p 11100)))
  (assert (equal "一一一〇一" (jp-str/p 11101)))
  (assert (equal "一一一〇九" (jp-str/p 11109)))
  (assert (equal "一一一一〇" (jp-str/p 11110)))
  (assert (equal "一一一一一" (jp-str/p 11111)))
  (assert (equal "一一一一九" (jp-str/p 11119)))
  (assert (equal "一一一二〇" (jp-str/p 11120)))
  (assert (equal "一一一二一" (jp-str/p 11121)))
  (assert (equal "一一一二九" (jp-str/p 11129)))
  (assert (equal "一一二〇〇" (jp-str/p 11200)))
  (assert (equal "一一二〇一" (jp-str/p 11201)))
  (assert (equal "一一二〇九" (jp-str/p 11209)))
  (assert (equal "一一二一〇" (jp-str/p 11210)))
  (assert (equal "一一二一一" (jp-str/p 11211)))
  (assert (equal "一一二一九" (jp-str/p 11219)))
  (assert (equal "一一二二〇" (jp-str/p 11220)))
  (assert (equal "一一二二一" (jp-str/p 11221)))
  (assert (equal "一一二二九" (jp-str/p 11229)))
  (assert (equal "一二〇〇〇" (jp-str/p 12000)))
  (assert (equal "一二〇〇一" (jp-str/p 12001)))
  (assert (equal "一二〇〇九" (jp-str/p 12009)))
  (assert (equal "一二〇一〇" (jp-str/p 12010)))
  (assert (equal "一二〇一一" (jp-str/p 12011)))
  (assert (equal "一二〇一九" (jp-str/p 12019)))
  (assert (equal "一二〇二〇" (jp-str/p 12020)))
  (assert (equal "一二〇二一" (jp-str/p 12021)))
  (assert (equal "一二〇二九" (jp-str/p 12029)))
  (assert (equal "一二一〇〇" (jp-str/p 12100)))
  (assert (equal "一二一〇一" (jp-str/p 12101)))
  (assert (equal "一二一〇九" (jp-str/p 12109)))
  (assert (equal "一二一一〇" (jp-str/p 12110)))
  (assert (equal "一二一一一" (jp-str/p 12111)))
  (assert (equal "一二一一九" (jp-str/p 12119)))
  (assert (equal "一二一二〇" (jp-str/p 12120)))
  (assert (equal "一二一二一" (jp-str/p 12121)))
  (assert (equal "一二一二九" (jp-str/p 12129)))
  (assert (equal "一二二〇〇" (jp-str/p 12200)))
  (assert (equal "一二二〇一" (jp-str/p 12201)))
  (assert (equal "一二二〇九" (jp-str/p 12209)))
  (assert (equal "一二二一〇" (jp-str/p 12210)))
  (assert (equal "一二二一一" (jp-str/p 12211)))
  (assert (equal "一二二一九" (jp-str/p 12219)))
  (assert (equal "一二二二〇" (jp-str/p 12220)))
  (assert (equal "一二二二一" (jp-str/p 12221)))
  (assert (equal "一二二二九" (jp-str/p 12229)))
  (assert (equal "一九九九九" (jp-str/p 19999)))
  ;; 20000 - 99990000
  (assert (equal "二〇〇〇〇" (jp-str/p 20000)))
  (assert (equal "九〇〇〇〇" (jp-str/p 90000)))
  (assert (equal "一〇〇〇〇〇" (jp-str/p 100000)))
  (assert (equal "一一〇〇〇〇" (jp-str/p 110000)))
  (assert (equal "一九〇〇〇〇" (jp-str/p 190000)))
  (assert (equal "二〇〇〇〇〇" (jp-str/p 200000)))
  (assert (equal "二一〇〇〇〇" (jp-str/p 210000)))
  (assert (equal "二九〇〇〇〇" (jp-str/p 290000)))
  (assert (equal "一〇〇〇〇〇〇" (jp-str/p 1000000)))
  (assert (equal "一〇一〇〇〇〇" (jp-str/p 1010000)))
  (assert (equal "一〇九〇〇〇〇" (jp-str/p 1090000)))
  (assert (equal "一一〇〇〇〇〇" (jp-str/p 1100000)))
  (assert (equal "一一一〇〇〇〇" (jp-str/p 1110000)))
  (assert (equal "一一九〇〇〇〇" (jp-str/p 1190000)))
  (assert (equal "一二〇〇〇〇〇" (jp-str/p 1200000)))
  (assert (equal "一二一〇〇〇〇" (jp-str/p 1210000)))
  (assert (equal "一二九〇〇〇〇" (jp-str/p 1290000)))
  (assert (equal "二〇〇〇〇〇〇" (jp-str/p 2000000)))
  (assert (equal "二〇一〇〇〇〇" (jp-str/p 2010000)))
  (assert (equal "二〇九〇〇〇〇" (jp-str/p 2090000)))
  (assert (equal "二一〇〇〇〇〇" (jp-str/p 2100000)))
  (assert (equal "二一一〇〇〇〇" (jp-str/p 2110000)))
  (assert (equal "二一九〇〇〇〇" (jp-str/p 2190000)))
  (assert (equal "二二〇〇〇〇〇" (jp-str/p 2200000)))
  (assert (equal "二二一〇〇〇〇" (jp-str/p 2210000)))
  (assert (equal "二二九〇〇〇〇" (jp-str/p 2290000)))
  (assert (equal "一〇〇〇〇〇〇〇" (jp-str/p 10000000)))
  (assert (equal "一〇〇一〇〇〇〇" (jp-str/p 10010000)))
  (assert (equal "一〇〇九〇〇〇〇" (jp-str/p 10090000)))
  (assert (equal "一〇一〇〇〇〇〇" (jp-str/p 10100000)))
  (assert (equal "一〇一一〇〇〇〇" (jp-str/p 10110000)))
  (assert (equal "一〇一九〇〇〇〇" (jp-str/p 10190000)))
  (assert (equal "一〇二〇〇〇〇〇" (jp-str/p 10200000)))
  (assert (equal "一〇二一〇〇〇〇" (jp-str/p 10210000)))
  (assert (equal "一〇二九〇〇〇〇" (jp-str/p 10290000)))
  (assert (equal "一一〇〇〇〇〇〇" (jp-str/p 11000000)))
  (assert (equal "一一〇一〇〇〇〇" (jp-str/p 11010000)))
  (assert (equal "一一〇九〇〇〇〇" (jp-str/p 11090000)))
  (assert (equal "一一一〇〇〇〇〇" (jp-str/p 11100000)))
  (assert (equal "一一一一〇〇〇〇" (jp-str/p 11110000)))
  (assert (equal "一一一九〇〇〇〇" (jp-str/p 11190000)))
  (assert (equal "一一二〇〇〇〇〇" (jp-str/p 11200000)))
  (assert (equal "一一二一〇〇〇〇" (jp-str/p 11210000)))
  (assert (equal "一一二九〇〇〇〇" (jp-str/p 11290000)))
  (assert (equal "一二〇〇〇〇〇〇" (jp-str/p 12000000)))
  (assert (equal "一二〇一〇〇〇〇" (jp-str/p 12010000)))
  (assert (equal "一二〇九〇〇〇〇" (jp-str/p 12090000)))
  (assert (equal "一二一〇〇〇〇〇" (jp-str/p 12100000)))
  (assert (equal "一二一一〇〇〇〇" (jp-str/p 12110000)))
  (assert (equal "一二一九〇〇〇〇" (jp-str/p 12190000)))
  (assert (equal "一二二〇〇〇〇〇" (jp-str/p 12200000)))
  (assert (equal "一二二一〇〇〇〇" (jp-str/p 12210000)))
  (assert (equal "一二二九〇〇〇〇" (jp-str/p 12290000)))
  (assert (equal "二〇〇〇〇〇〇〇" (jp-str/p 20000000)))
  (assert (equal "二〇〇一〇〇〇〇" (jp-str/p 20010000)))
  (assert (equal "二〇〇九〇〇〇〇" (jp-str/p 20090000)))
  (assert (equal "二〇一〇〇〇〇〇" (jp-str/p 20100000)))
  (assert (equal "二〇一一〇〇〇〇" (jp-str/p 20110000)))
  (assert (equal "二〇一九〇〇〇〇" (jp-str/p 20190000)))
  (assert (equal "二〇二〇〇〇〇〇" (jp-str/p 20200000)))
  (assert (equal "二〇二一〇〇〇〇" (jp-str/p 20210000)))
  (assert (equal "二〇二九〇〇〇〇" (jp-str/p 20290000)))
  (assert (equal "二一〇〇〇〇〇〇" (jp-str/p 21000000)))
  (assert (equal "二一〇一〇〇〇〇" (jp-str/p 21010000)))
  (assert (equal "二一〇九〇〇〇〇" (jp-str/p 21090000)))
  (assert (equal "二一一〇〇〇〇〇" (jp-str/p 21100000)))
  (assert (equal "二一一一〇〇〇〇" (jp-str/p 21110000)))
  (assert (equal "二一一九〇〇〇〇" (jp-str/p 21190000)))
  (assert (equal "二一二〇〇〇〇〇" (jp-str/p 21200000)))
  (assert (equal "二一二一〇〇〇〇" (jp-str/p 21210000)))
  (assert (equal "二一二九〇〇〇〇" (jp-str/p 21290000)))
  (assert (equal "二二〇〇〇〇〇〇" (jp-str/p 22000000)))
  (assert (equal "二二〇一〇〇〇〇" (jp-str/p 22010000)))
  (assert (equal "二二〇九〇〇〇〇" (jp-str/p 22090000)))
  (assert (equal "二二一〇〇〇〇〇" (jp-str/p 22100000)))
  (assert (equal "二二一一〇〇〇〇" (jp-str/p 22110000)))
  (assert (equal "二二一九〇〇〇〇" (jp-str/p 22190000)))
  (assert (equal "二二二〇〇〇〇〇" (jp-str/p 22200000)))
  (assert (equal "二二二一〇〇〇〇" (jp-str/p 22210000)))
  (assert (equal "二二二九〇〇〇〇" (jp-str/p 22290000)))
  (assert (equal "九九九九〇〇〇〇" (jp-str/p 99990000)))
  ;; 100000000 - 100009999
  (assert (equal "一〇〇〇〇〇〇〇〇" (jp-str/p 100000000)))
  (assert (equal "一〇〇〇〇〇〇〇一" (jp-str/p 100000001)))
  (assert (equal "一〇〇〇〇〇〇〇九" (jp-str/p 100000009)))
  (assert (equal "一〇〇〇〇〇〇一〇" (jp-str/p 100000010)))
  (assert (equal "一〇〇〇〇〇〇一一" (jp-str/p 100000011)))
  (assert (equal "一〇〇〇〇〇〇一九" (jp-str/p 100000019)))
  (assert (equal "一〇〇〇〇〇〇二〇" (jp-str/p 100000020)))
  (assert (equal "一〇〇〇〇〇〇二一" (jp-str/p 100000021)))
  (assert (equal "一〇〇〇〇〇〇二九" (jp-str/p 100000029)))
  (assert (equal "一〇〇〇〇〇一〇〇" (jp-str/p 100000100)))
  (assert (equal "一〇〇〇〇〇一〇一" (jp-str/p 100000101)))
  (assert (equal "一〇〇〇〇〇一〇九" (jp-str/p 100000109)))
  (assert (equal "一〇〇〇〇〇一一〇" (jp-str/p 100000110)))
  (assert (equal "一〇〇〇〇〇一一一" (jp-str/p 100000111)))
  (assert (equal "一〇〇〇〇〇一一九" (jp-str/p 100000119)))
  (assert (equal "一〇〇〇〇〇一二〇" (jp-str/p 100000120)))
  (assert (equal "一〇〇〇〇〇一二一" (jp-str/p 100000121)))
  (assert (equal "一〇〇〇〇〇一二九" (jp-str/p 100000129)))
  (assert (equal "一〇〇〇〇〇二〇〇" (jp-str/p 100000200)))
  (assert (equal "一〇〇〇〇〇二〇一" (jp-str/p 100000201)))
  (assert (equal "一〇〇〇〇〇二〇九" (jp-str/p 100000209)))
  (assert (equal "一〇〇〇〇〇二一〇" (jp-str/p 100000210)))
  (assert (equal "一〇〇〇〇〇二一一" (jp-str/p 100000211)))
  (assert (equal "一〇〇〇〇〇二一九" (jp-str/p 100000219)))
  (assert (equal "一〇〇〇〇〇二二〇" (jp-str/p 100000220)))
  (assert (equal "一〇〇〇〇〇二二一" (jp-str/p 100000221)))
  (assert (equal "一〇〇〇〇〇二二九" (jp-str/p 100000229)))
  (assert (equal "一〇〇〇〇一〇〇〇" (jp-str/p 100001000)))
  (assert (equal "一〇〇〇〇一〇〇一" (jp-str/p 100001001)))
  (assert (equal "一〇〇〇〇一〇〇九" (jp-str/p 100001009)))
  (assert (equal "一〇〇〇〇一〇一〇" (jp-str/p 100001010)))
  (assert (equal "一〇〇〇〇一〇一一" (jp-str/p 100001011)))
  (assert (equal "一〇〇〇〇一〇一九" (jp-str/p 100001019)))
  (assert (equal "一〇〇〇〇一〇二〇" (jp-str/p 100001020)))
  (assert (equal "一〇〇〇〇一〇二一" (jp-str/p 100001021)))
  (assert (equal "一〇〇〇〇一〇二九" (jp-str/p 100001029)))
  (assert (equal "一〇〇〇〇一一〇〇" (jp-str/p 100001100)))
  (assert (equal "一〇〇〇〇一一〇一" (jp-str/p 100001101)))
  (assert (equal "一〇〇〇〇一一〇九" (jp-str/p 100001109)))
  (assert (equal "一〇〇〇〇一一一〇" (jp-str/p 100001110)))
  (assert (equal "一〇〇〇〇一一一一" (jp-str/p 100001111)))
  (assert (equal "一〇〇〇〇一一一九" (jp-str/p 100001119)))
  (assert (equal "一〇〇〇〇一一二〇" (jp-str/p 100001120)))
  (assert (equal "一〇〇〇〇一一二一" (jp-str/p 100001121)))
  (assert (equal "一〇〇〇〇一一二九" (jp-str/p 100001129)))
  (assert (equal "一〇〇〇〇一二〇〇" (jp-str/p 100001200)))
  (assert (equal "一〇〇〇〇一二〇一" (jp-str/p 100001201)))
  (assert (equal "一〇〇〇〇一二〇九" (jp-str/p 100001209)))
  (assert (equal "一〇〇〇〇一二一〇" (jp-str/p 100001210)))
  (assert (equal "一〇〇〇〇一二一一" (jp-str/p 100001211)))
  (assert (equal "一〇〇〇〇一二一九" (jp-str/p 100001219)))
  (assert (equal "一〇〇〇〇一二二〇" (jp-str/p 100001220)))
  (assert (equal "一〇〇〇〇一二二一" (jp-str/p 100001221)))
  (assert (equal "一〇〇〇〇一二二九" (jp-str/p 100001229)))
  (assert (equal "一〇〇〇〇二〇〇〇" (jp-str/p 100002000)))
  (assert (equal "一〇〇〇〇二〇〇一" (jp-str/p 100002001)))
  (assert (equal "一〇〇〇〇二〇〇九" (jp-str/p 100002009)))
  (assert (equal "一〇〇〇〇二〇一〇" (jp-str/p 100002010)))
  (assert (equal "一〇〇〇〇二〇一一" (jp-str/p 100002011)))
  (assert (equal "一〇〇〇〇二〇一九" (jp-str/p 100002019)))
  (assert (equal "一〇〇〇〇二〇二〇" (jp-str/p 100002020)))
  (assert (equal "一〇〇〇〇二〇二一" (jp-str/p 100002021)))
  (assert (equal "一〇〇〇〇二〇二九" (jp-str/p 100002029)))
  (assert (equal "一〇〇〇〇二一〇〇" (jp-str/p 100002100)))
  (assert (equal "一〇〇〇〇二一〇一" (jp-str/p 100002101)))
  (assert (equal "一〇〇〇〇二一〇九" (jp-str/p 100002109)))
  (assert (equal "一〇〇〇〇二一一〇" (jp-str/p 100002110)))
  (assert (equal "一〇〇〇〇二一一一" (jp-str/p 100002111)))
  (assert (equal "一〇〇〇〇二一一九" (jp-str/p 100002119)))
  (assert (equal "一〇〇〇〇二一二〇" (jp-str/p 100002120)))
  (assert (equal "一〇〇〇〇二一二一" (jp-str/p 100002121)))
  (assert (equal "一〇〇〇〇二一二九" (jp-str/p 100002129)))
  (assert (equal "一〇〇〇〇二二〇〇" (jp-str/p 100002200)))
  (assert (equal "一〇〇〇〇二二〇一" (jp-str/p 100002201)))
  (assert (equal "一〇〇〇〇二二〇九" (jp-str/p 100002209)))
  (assert (equal "一〇〇〇〇二二一〇" (jp-str/p 100002210)))
  (assert (equal "一〇〇〇〇二二一一" (jp-str/p 100002211)))
  (assert (equal "一〇〇〇〇二二一九" (jp-str/p 100002219)))
  (assert (equal "一〇〇〇〇二二二〇" (jp-str/p 100002220)))
  (assert (equal "一〇〇〇〇二二二一" (jp-str/p 100002221)))
  (assert (equal "一〇〇〇〇二二二九" (jp-str/p 100002229)))
  (assert (equal "一〇〇〇〇九九九九" (jp-str/p 100009999)))
  ;; 100010000 - 100019999
  (assert (equal "一〇〇〇一〇〇〇〇" (jp-str/p 100010000)))
  (assert (equal "一〇〇〇一〇〇〇一" (jp-str/p 100010001)))
  (assert (equal "一〇〇〇一〇〇〇九" (jp-str/p 100010009)))
  (assert (equal "一〇〇〇一〇〇一〇" (jp-str/p 100010010)))
  (assert (equal "一〇〇〇一〇〇一一" (jp-str/p 100010011)))
  (assert (equal "一〇〇〇一〇〇一九" (jp-str/p 100010019)))
  (assert (equal "一〇〇〇一〇〇二〇" (jp-str/p 100010020)))
  (assert (equal "一〇〇〇一〇〇二一" (jp-str/p 100010021)))
  (assert (equal "一〇〇〇一〇〇二九" (jp-str/p 100010029)))
  (assert (equal "一〇〇〇一〇一〇〇" (jp-str/p 100010100)))
  (assert (equal "一〇〇〇一〇一〇一" (jp-str/p 100010101)))
  (assert (equal "一〇〇〇一〇一〇九" (jp-str/p 100010109)))
  (assert (equal "一〇〇〇一〇一一〇" (jp-str/p 100010110)))
  (assert (equal "一〇〇〇一〇一一一" (jp-str/p 100010111)))
  (assert (equal "一〇〇〇一〇一一九" (jp-str/p 100010119)))
  (assert (equal "一〇〇〇一〇一二〇" (jp-str/p 100010120)))
  (assert (equal "一〇〇〇一〇一二一" (jp-str/p 100010121)))
  (assert (equal "一〇〇〇一〇一二九" (jp-str/p 100010129)))
  (assert (equal "一〇〇〇一〇二〇〇" (jp-str/p 100010200)))
  (assert (equal "一〇〇〇一〇二〇一" (jp-str/p 100010201)))
  (assert (equal "一〇〇〇一〇二〇九" (jp-str/p 100010209)))
  (assert (equal "一〇〇〇一〇二一〇" (jp-str/p 100010210)))
  (assert (equal "一〇〇〇一〇二一一" (jp-str/p 100010211)))
  (assert (equal "一〇〇〇一〇二一九" (jp-str/p 100010219)))
  (assert (equal "一〇〇〇一〇二二〇" (jp-str/p 100010220)))
  (assert (equal "一〇〇〇一〇二二一" (jp-str/p 100010221)))
  (assert (equal "一〇〇〇一〇二二九" (jp-str/p 100010229)))
  (assert (equal "一〇〇〇一一〇〇〇" (jp-str/p 100011000)))
  (assert (equal "一〇〇〇一一〇〇一" (jp-str/p 100011001)))
  (assert (equal "一〇〇〇一一〇〇九" (jp-str/p 100011009)))
  (assert (equal "一〇〇〇一一〇一〇" (jp-str/p 100011010)))
  (assert (equal "一〇〇〇一一〇一一" (jp-str/p 100011011)))
  (assert (equal "一〇〇〇一一〇一九" (jp-str/p 100011019)))
  (assert (equal "一〇〇〇一一〇二〇" (jp-str/p 100011020)))
  (assert (equal "一〇〇〇一一〇二一" (jp-str/p 100011021)))
  (assert (equal "一〇〇〇一一〇二九" (jp-str/p 100011029)))
  (assert (equal "一〇〇〇一一一〇〇" (jp-str/p 100011100)))
  (assert (equal "一〇〇〇一一一〇一" (jp-str/p 100011101)))
  (assert (equal "一〇〇〇一一一〇九" (jp-str/p 100011109)))
  (assert (equal "一〇〇〇一一一一〇" (jp-str/p 100011110)))
  (assert (equal "一〇〇〇一一一一一" (jp-str/p 100011111)))
  (assert (equal "一〇〇〇一一一一九" (jp-str/p 100011119)))
  (assert (equal "一〇〇〇一一一二〇" (jp-str/p 100011120)))
  (assert (equal "一〇〇〇一一一二一" (jp-str/p 100011121)))
  (assert (equal "一〇〇〇一一一二九" (jp-str/p 100011129)))
  (assert (equal "一〇〇〇一一二〇〇" (jp-str/p 100011200)))
  (assert (equal "一〇〇〇一一二〇一" (jp-str/p 100011201)))
  (assert (equal "一〇〇〇一一二〇九" (jp-str/p 100011209)))
  (assert (equal "一〇〇〇一一二一〇" (jp-str/p 100011210)))
  (assert (equal "一〇〇〇一一二一一" (jp-str/p 100011211)))
  (assert (equal "一〇〇〇一一二一九" (jp-str/p 100011219)))
  (assert (equal "一〇〇〇一一二二〇" (jp-str/p 100011220)))
  (assert (equal "一〇〇〇一一二二一" (jp-str/p 100011221)))
  (assert (equal "一〇〇〇一一二二九" (jp-str/p 100011229)))
  (assert (equal "一〇〇〇一二〇〇〇" (jp-str/p 100012000)))
  (assert (equal "一〇〇〇一二〇〇一" (jp-str/p 100012001)))
  (assert (equal "一〇〇〇一二〇〇九" (jp-str/p 100012009)))
  (assert (equal "一〇〇〇一二〇一〇" (jp-str/p 100012010)))
  (assert (equal "一〇〇〇一二〇一一" (jp-str/p 100012011)))
  (assert (equal "一〇〇〇一二〇一九" (jp-str/p 100012019)))
  (assert (equal "一〇〇〇一二〇二〇" (jp-str/p 100012020)))
  (assert (equal "一〇〇〇一二〇二一" (jp-str/p 100012021)))
  (assert (equal "一〇〇〇一二〇二九" (jp-str/p 100012029)))
  (assert (equal "一〇〇〇一二一〇〇" (jp-str/p 100012100)))
  (assert (equal "一〇〇〇一二一〇一" (jp-str/p 100012101)))
  (assert (equal "一〇〇〇一二一〇九" (jp-str/p 100012109)))
  (assert (equal "一〇〇〇一二一一〇" (jp-str/p 100012110)))
  (assert (equal "一〇〇〇一二一一一" (jp-str/p 100012111)))
  (assert (equal "一〇〇〇一二一一九" (jp-str/p 100012119)))
  (assert (equal "一〇〇〇一二一二〇" (jp-str/p 100012120)))
  (assert (equal "一〇〇〇一二一二一" (jp-str/p 100012121)))
  (assert (equal "一〇〇〇一二一二九" (jp-str/p 100012129)))
  (assert (equal "一〇〇〇一二二〇〇" (jp-str/p 100012200)))
  (assert (equal "一〇〇〇一二二〇一" (jp-str/p 100012201)))
  (assert (equal "一〇〇〇一二二〇九" (jp-str/p 100012209)))
  (assert (equal "一〇〇〇一二二一〇" (jp-str/p 100012210)))
  (assert (equal "一〇〇〇一二二一一" (jp-str/p 100012211)))
  (assert (equal "一〇〇〇一二二一九" (jp-str/p 100012219)))
  (assert (equal "一〇〇〇一二二二〇" (jp-str/p 100012220)))
  (assert (equal "一〇〇〇一二二二一" (jp-str/p 100012221)))
  (assert (equal "一〇〇〇一二二二九" (jp-str/p 100012229)))
  (assert (equal "一〇〇〇一九九九九" (jp-str/p 100019999)))
  ;; 100020000 - 199990000
  (assert (equal "一〇〇〇二〇〇〇〇" (jp-str/p 100020000)))
  (assert (equal "一〇〇〇九〇〇〇〇" (jp-str/p 100090000)))
  (assert (equal "一〇〇一〇〇〇〇〇" (jp-str/p 100100000)))
  (assert (equal "一〇〇一一〇〇〇〇" (jp-str/p 100110000)))
  (assert (equal "一〇〇一九〇〇〇〇" (jp-str/p 100190000)))
  (assert (equal "一〇〇二〇〇〇〇〇" (jp-str/p 100200000)))
  (assert (equal "一〇〇二一〇〇〇〇" (jp-str/p 100210000)))
  (assert (equal "一〇〇二九〇〇〇〇" (jp-str/p 100290000)))
  (assert (equal "一〇一〇〇〇〇〇〇" (jp-str/p 101000000)))
  (assert (equal "一〇一〇一〇〇〇〇" (jp-str/p 101010000)))
  (assert (equal "一〇一〇九〇〇〇〇" (jp-str/p 101090000)))
  (assert (equal "一〇一一〇〇〇〇〇" (jp-str/p 101100000)))
  (assert (equal "一〇一一一〇〇〇〇" (jp-str/p 101110000)))
  (assert (equal "一〇一一九〇〇〇〇" (jp-str/p 101190000)))
  (assert (equal "一〇一二〇〇〇〇〇" (jp-str/p 101200000)))
  (assert (equal "一〇一二一〇〇〇〇" (jp-str/p 101210000)))
  (assert (equal "一〇一二九〇〇〇〇" (jp-str/p 101290000)))
  (assert (equal "一〇二〇〇〇〇〇〇" (jp-str/p 102000000)))
  (assert (equal "一〇二〇一〇〇〇〇" (jp-str/p 102010000)))
  (assert (equal "一〇二〇九〇〇〇〇" (jp-str/p 102090000)))
  (assert (equal "一〇二一〇〇〇〇〇" (jp-str/p 102100000)))
  (assert (equal "一〇二一一〇〇〇〇" (jp-str/p 102110000)))
  (assert (equal "一〇二一九〇〇〇〇" (jp-str/p 102190000)))
  (assert (equal "一〇二二〇〇〇〇〇" (jp-str/p 102200000)))
  (assert (equal "一〇二二一〇〇〇〇" (jp-str/p 102210000)))
  (assert (equal "一〇二二九〇〇〇〇" (jp-str/p 102290000)))
  (assert (equal "一一〇〇〇〇〇〇〇" (jp-str/p 110000000)))
  (assert (equal "一一〇〇一〇〇〇〇" (jp-str/p 110010000)))
  (assert (equal "一一〇〇九〇〇〇〇" (jp-str/p 110090000)))
  (assert (equal "一一〇一〇〇〇〇〇" (jp-str/p 110100000)))
  (assert (equal "一一〇一一〇〇〇〇" (jp-str/p 110110000)))
  (assert (equal "一一〇一九〇〇〇〇" (jp-str/p 110190000)))
  (assert (equal "一一〇二〇〇〇〇〇" (jp-str/p 110200000)))
  (assert (equal "一一〇二一〇〇〇〇" (jp-str/p 110210000)))
  (assert (equal "一一〇二九〇〇〇〇" (jp-str/p 110290000)))
  (assert (equal "一一一〇〇〇〇〇〇" (jp-str/p 111000000)))
  (assert (equal "一一一〇一〇〇〇〇" (jp-str/p 111010000)))
  (assert (equal "一一一〇九〇〇〇〇" (jp-str/p 111090000)))
  (assert (equal "一一一一〇〇〇〇〇" (jp-str/p 111100000)))
  (assert (equal "一一一一一〇〇〇〇" (jp-str/p 111110000)))
  (assert (equal "一一一一九〇〇〇〇" (jp-str/p 111190000)))
  (assert (equal "一一一二〇〇〇〇〇" (jp-str/p 111200000)))
  (assert (equal "一一一二一〇〇〇〇" (jp-str/p 111210000)))
  (assert (equal "一一一二九〇〇〇〇" (jp-str/p 111290000)))
  (assert (equal "一一二〇〇〇〇〇〇" (jp-str/p 112000000)))
  (assert (equal "一一二〇一〇〇〇〇" (jp-str/p 112010000)))
  (assert (equal "一一二〇九〇〇〇〇" (jp-str/p 112090000)))
  (assert (equal "一一二一〇〇〇〇〇" (jp-str/p 112100000)))
  (assert (equal "一一二一一〇〇〇〇" (jp-str/p 112110000)))
  (assert (equal "一一二一九〇〇〇〇" (jp-str/p 112190000)))
  (assert (equal "一一二二〇〇〇〇〇" (jp-str/p 112200000)))
  (assert (equal "一一二二一〇〇〇〇" (jp-str/p 112210000)))
  (assert (equal "一一二二九〇〇〇〇" (jp-str/p 112290000)))
  (assert (equal "一二〇〇〇〇〇〇〇" (jp-str/p 120000000)))
  (assert (equal "一二〇〇一〇〇〇〇" (jp-str/p 120010000)))
  (assert (equal "一二〇〇九〇〇〇〇" (jp-str/p 120090000)))
  (assert (equal "一二〇一〇〇〇〇〇" (jp-str/p 120100000)))
  (assert (equal "一二〇一一〇〇〇〇" (jp-str/p 120110000)))
  (assert (equal "一二〇一九〇〇〇〇" (jp-str/p 120190000)))
  (assert (equal "一二〇二〇〇〇〇〇" (jp-str/p 120200000)))
  (assert (equal "一二〇二一〇〇〇〇" (jp-str/p 120210000)))
  (assert (equal "一二〇二九〇〇〇〇" (jp-str/p 120290000)))
  (assert (equal "一二一〇〇〇〇〇〇" (jp-str/p 121000000)))
  (assert (equal "一二一〇一〇〇〇〇" (jp-str/p 121010000)))
  (assert (equal "一二一〇九〇〇〇〇" (jp-str/p 121090000)))
  (assert (equal "一二一一〇〇〇〇〇" (jp-str/p 121100000)))
  (assert (equal "一二一一一〇〇〇〇" (jp-str/p 121110000)))
  (assert (equal "一二一一九〇〇〇〇" (jp-str/p 121190000)))
  (assert (equal "一二一二〇〇〇〇〇" (jp-str/p 121200000)))
  (assert (equal "一二一二一〇〇〇〇" (jp-str/p 121210000)))
  (assert (equal "一二一二九〇〇〇〇" (jp-str/p 121290000)))
  (assert (equal "一二二〇〇〇〇〇〇" (jp-str/p 122000000)))
  (assert (equal "一二二〇一〇〇〇〇" (jp-str/p 122010000)))
  (assert (equal "一二二〇九〇〇〇〇" (jp-str/p 122090000)))
  (assert (equal "一二二一〇〇〇〇〇" (jp-str/p 122100000)))
  (assert (equal "一二二一一〇〇〇〇" (jp-str/p 122110000)))
  (assert (equal "一二二一九〇〇〇〇" (jp-str/p 122190000)))
  (assert (equal "一二二二〇〇〇〇〇" (jp-str/p 122200000)))
  (assert (equal "一二二二一〇〇〇〇" (jp-str/p 122210000)))
  (assert (equal "一二二二九〇〇〇〇" (jp-str/p 122290000)))
  (assert (equal "一九九九九〇〇〇〇" (jp-str/p 199990000)))

  ;; more big nums
  (let ((num 12300001001))
    (assert (equal "一二三〇〇〇〇一〇〇一" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇" (jp-str/p num)))
    (mulf num 10000)
    (assert (equal "一二三〇〇〇〇一〇〇一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇" (jp-str/p num))))
  ;; 
  t)

(defun test-jp-positional-integer-minus ()
  (assert (equal "−一" (jp-str/p -1)))
  (assert (equal "−二" (jp-str/p -2)))
  (assert (equal "−三" (jp-str/p -3)))
  (assert (equal "−四" (jp-str/p -4)))
  (assert (equal "−五" (jp-str/p -5)))
  (assert (equal "−六" (jp-str/p -6)))
  (assert (equal "−七" (jp-str/p -7)))
  (assert (equal "−八" (jp-str/p -8)))
  (assert (equal "−九" (jp-str/p -9)))
  (assert (equal "−一〇" (jp-str/p -10)))
  (assert (equal "−二〇" (jp-str/p -20)))
  (assert (equal "−一〇〇" (jp-str/p -100)))
  (assert (equal "−五〇〇" (jp-str/p -500)))
  (assert (equal "−一〇〇〇" (jp-str/p -1000)))
  (assert (equal "−一〇〇〇〇" (jp-str/p -10000)))
  (assert (equal "−一二三四五" (jp-str/p -12345)))
  ;; 
  t)
  
(defun test-jp-positional-rational ()
  (assert (equal "一／二" (jp-str/p 1/2)))
  (assert (equal "一／一〇" (jp-str/p 1/10)))
  (assert (equal "一／二〇" (jp-str/p 1/20)))
  (assert (equal "一／一〇〇" (jp-str/p 1/100)))
  (assert (equal "一／一一〇" (jp-str/p 1/110)))
  (assert (equal "一／一一一" (jp-str/p 1/111)))
  (assert (equal "一／一二〇" (jp-str/p 1/120)))
  (assert (equal "一／一二一" (jp-str/p 1/121)))
  (assert (equal "一／二〇〇" (jp-str/p 1/200)))
  (assert (equal "一／二一〇" (jp-str/p 1/210)))
  (assert (equal "一／二一一" (jp-str/p 1/211)))
  (assert (equal "一／二二〇" (jp-str/p 1/220)))
  (assert (equal "一／二二一" (jp-str/p 1/221)))
  (assert (equal "一／一〇〇〇" (jp-str/p 1/1000)))
  (assert (equal "一／一〇一〇" (jp-str/p 1/1010)))
  (assert (equal "一／一〇一一" (jp-str/p 1/1011)))
  (assert (equal "一／一〇二〇" (jp-str/p 1/1020)))
  (assert (equal "一／一〇二一" (jp-str/p 1/1021)))
  (assert (equal "一／一一〇〇" (jp-str/p 1/1100)))
  (assert (equal "一／一一一〇" (jp-str/p 1/1110)))
  (assert (equal "一／一一一一" (jp-str/p 1/1111)))
  (assert (equal "一／一一二〇" (jp-str/p 1/1120)))
  (assert (equal "一／一一二一" (jp-str/p 1/1121)))
  (assert (equal "一／二二〇一" (jp-str/p 1/2201)))
  (assert (equal "一／一〇〇〇〇" (jp-str/p 1/10000)))
  (assert (equal "一／一一一一一" (jp-str/p 1/11111)))
  (assert (equal "一／二二二二二" (jp-str/p 1/22222)))
  (assert (equal "一／一〇〇〇〇〇〇〇〇" (jp-str/p 1/100000000)))

  (assert (equal "一／一九九九七" (jp-str/p 1/19997))) ; 19997 is a prime.
  (assert (equal "二／一九九九七" (jp-str/p 2/19997)))
  (assert (equal "一〇／一九九九七" (jp-str/p 10/19997)))
  (assert (equal "一一／一九九九七" (jp-str/p 11/19997)))
  (assert (equal "二一／一九九九七" (jp-str/p 21/19997)))
  (assert (equal "九九／一九九九七" (jp-str/p 99/19997)))
  (assert (equal "一〇〇／一九九九七" (jp-str/p 100/19997)))
  (assert (equal "一〇一／一九九九七" (jp-str/p 101/19997)))
  (assert (equal "一一一／一九九九七" (jp-str/p 111/19997)))
  (assert (equal "二一一／一九九九七" (jp-str/p 211/19997)))
  (assert (equal "一〇〇一／一九九九七" (jp-str/p 1001/19997)))
  (assert (equal "一一一一／一九九九七" (jp-str/p 1111/19997)))
  (assert (equal "二二二二／一九九九七" (jp-str/p 2222/19997)))
  (assert (equal "一〇〇〇〇／一九九九七" (jp-str/p 10000/19997)))
  (assert (equal "一〇〇〇一／一九九九七" (jp-str/p 10001/19997)))
  (assert (equal "一一一一〇／一九九九七" (jp-str/p 11110/19997)))
  (assert (equal "一五〇〇二／一九九九七" (jp-str/p 15002/19997)))
  (assert (equal "一九九九六／一九九九七" (jp-str/p 19996/19997)))

  (assert (equal "−一／二" (jp-str/p -1/2)))
  ;; 
  t)
  
(defun test-jp-positional-float ()
  ;; 0.1-0.9
  (assert (equal "〇・一" (jp-str/p 0.1)))
  (assert (equal "〇・二" (jp-str/p 0.2)))
  (assert (equal "〇・三" (jp-str/p 0.3)))
  (assert (equal "〇・四" (jp-str/p 0.4)))
  (assert (equal "〇・五" (jp-str/p 0.5)))
  (assert (equal "〇・六" (jp-str/p 0.6)))
  (assert (equal "〇・七" (jp-str/p 0.7)))
  (assert (equal "〇・八" (jp-str/p 0.8)))
  (assert (equal "〇・九" (jp-str/p 0.9)))
  ;; 0.10-0.30
  (assert (equal "〇・一" (jp-str/p 0.10)))
  (assert (equal "〇・一一" (jp-str/p 0.11)))
  (assert (equal "〇・一二" (jp-str/p 0.12)))
  (assert (equal "〇・一三" (jp-str/p 0.13)))
  (assert (equal "〇・一四" (jp-str/p 0.14)))
  (assert (equal "〇・一五" (jp-str/p 0.15)))
  (assert (equal "〇・一六" (jp-str/p 0.16)))
  (assert (equal "〇・一七" (jp-str/p 0.17)))
  (assert (equal "〇・一八" (jp-str/p 0.18)))
  (assert (equal "〇・一九" (jp-str/p 0.19)))
  (assert (equal "〇・二" (jp-str/p 0.20)))
  (assert (equal "〇・二一" (jp-str/p 0.21)))
  (assert (equal "〇・二二" (jp-str/p 0.22)))
  (assert (equal "〇・二三" (jp-str/p 0.23)))
  (assert (equal "〇・二四" (jp-str/p 0.24)))
  (assert (equal "〇・二五" (jp-str/p 0.25)))
  (assert (equal "〇・二六" (jp-str/p 0.26)))
  (assert (equal "〇・二七" (jp-str/p 0.27)))
  (assert (equal "〇・二八" (jp-str/p 0.28)))
  (assert (equal "〇・二九" (jp-str/p 0.29)))
  (assert (equal "〇・三" (jp-str/p 0.30)))
  ;; small nums
  (assert (equal "一〇・三四" (jp-str/p 10.34)))
  (assert (equal "一・〇三四" (jp-str/p 1.034)))
  (assert (equal "〇・一〇三四" (jp-str/p 0.1034)))
  (assert (equal "〇・〇一〇三四" (jp-str/p 0.01034)))
  (assert (equal "〇・〇〇一〇三四" (jp-str/p 0.001034)))
  (assert (equal-or-free-format "一〇・三四" 10.34))
  (assert (equal-or-free-format "一・〇三四" 1.034))
  (assert (equal-or-free-format "〇・一〇三四" 0.1034))
  (assert (equal-or-free-format "〇・〇一〇三四" 0.01034))
  (assert (equal-or-free-format "〇・〇〇一〇三四" 0.001034))
  (assert (equal-or-free-format "〇・〇〇〇一〇三四" 0.0001034))
  (assert (equal-or-free-format "〇・〇〇〇〇一〇三四" 0.00001034))
  (assert (equal-or-free-format "〇・〇〇〇〇〇一〇三四" 0.000001034))
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇一〇三四" 0.0000001034))
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇〇一〇三四" 0.00000001034))
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇〇〇一〇三四" 0.000000001034))
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇〇〇〇一〇三四" 0.0000000001034))
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇〇〇〇〇一〇三四" 0.00000000001034))
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇〇〇〇〇〇一〇三四" 0.000000000001034))
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇〇〇〇〇〇〇一〇三四" 0.0000000000001034))
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇〇〇〇〇〇〇〇一〇三四" 0.00000000000001034))
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇〇〇〇〇〇〇〇〇一〇三四" 0.000000000000001034))
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇一〇三四" 0.0000000000000001034))
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇一〇三四" 0.00000000000000001034))
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇一〇三四" 0.000000000000000001034))
  ;; minus
  (assert (equal "−〇・一" (jp-str/p -0.1)))
  (assert (equal "−〇・二" (jp-str/p -0.2)))
  (assert (equal "−〇・一一" (jp-str/p -0.11)))
  (assert (equal "−〇・〇二" (jp-str/p -0.02)))
  (assert (equal "−一・一" (jp-str/p -1.1)))
  (assert (equal "−一・〇一" (jp-str/p -1.01)))
  ;;
  t)

(defun test-jp-positional-fallback ()
  ;; too big num
  (assert (equal "一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇"
		 (jp-str/p (expt 10 68))))
  (assert (equal "一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇"
		 (jp-str/p (expt 10 72))))
  (assert (equal "−一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇"
		 (jp-str/p (- (expt 10 68)))))
  (assert (equal "−一〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇"
		 (jp-str/p (- (expt 10 72)))))
  ;; too small num
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇一"
				0.000000000000000000001))
  (assert (equal-or-free-format "〇・〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇一"
				0.0000000000000000000001))
  (assert (equal-or-free-format "−〇・〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇一"
				-0.000000000000000000001))
  (assert (equal-or-free-format "−〇・〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇一"
				-0.0000000000000000000001))
  ;; complex
  (assert (equal (format nil "~A" #c(1 1))
  		 (jp-str/p #c(1 1))))
  ;;
  t)

(defun test-jp-positional-parameters ()
  ;; [Integer]
  ;; digits-after-dot -- ignored
  (assert (equal "一" (jp-str/p 1 :digits-after-dot nil)))
  (assert (equal "一" (jp-str/p 1 :digits-after-dot 0)))
  (assert (equal "一" (jp-str/p 1 :digits-after-dot 1)))
  (assert (equal "一" (jp-str/p 1 :digits-after-dot -1)))
  ;; scale
  (assert (equal "一" (jp-str/p 1 :scale nil)))
  (assert (equal "一" (jp-str/p 1 :scale 0)))
  (assert (equal "一〇" (jp-str/p 1 :scale 1)))
  (assert (equal "一／一〇" (jp-str/p 1 :scale -1)))
  ;; radix-point
  (assert (equal "一" (jp-str/p 1 :radix-point nil)))
  (assert (equal "一a" (jp-str/p 1 :radix-point #\a)))
  (assert (equal "一abc" (jp-str/p 1 :radix-point "abc")))

  ;; [Rational]
  ;; digits-after-dot -- ignored
  (assert (equal "一／二" (jp-str/p 1/2 :digits-after-dot nil)))
  (assert (equal "一／二" (jp-str/p 1/2 :digits-after-dot 0)))
  (assert (equal "一／二" (jp-str/p 1/2 :digits-after-dot 1)))
  (assert (equal "一／二" (jp-str/p 1/2 :digits-after-dot -1)))
  ;; scale
  (assert (equal "一／二" (jp-str/p 1/2 :scale nil)))
  (assert (equal "一／二" (jp-str/p 1/2 :scale 0)))
  (assert (equal "五" (jp-str/p 1/2 :scale 1)))
  (assert (equal "一／二〇" (jp-str/p 1/2 :scale -1)))
  ;; radix-point
  (assert (equal "一／二" (jp-str/p 1/2 :radix-point nil)))
  (assert (equal "一／二a" (jp-str/p 1/2 :radix-point #\a)))
  (assert (equal "一／二abc" (jp-str/p 1/2 :radix-point "abc")))

  ;; [Float]
  ;; digits-after-dot
  (assert (equal "一二・三四" (jp-str/p 12.34 :digits-after-dot nil)))
  (assert (equal "一二・" (jp-str/p 12.34 :digits-after-dot 0))) ; TODO
  (assert (equal "一二・三" (jp-str/p 12.34 :digits-after-dot 1)))
  (assert (equal "一二・三四" (jp-str/p 12.34 :digits-after-dot 2)))
  (assert (equal "一二・三四〇" (jp-str/p 12.34 :digits-after-dot 3)))
  (assert (equal "一〇・〇" (jp-str/p 12.34 :digits-after-dot -1))) ; TODO
  (assert (equal "〇・〇" (jp-str/p 12.34 :digits-after-dot -2)))   ; TODO
  ;; scale
  (assert (equal "一二・三四" (jp-str/p 12.34 :scale nil)))
  (assert (equal "一二・三四" (jp-str/p 12.34 :scale 0)))
  (assert (equal "一二三・四" (jp-str/p 12.34 :scale 1)))
  (assert (equal "一二三四・〇" (jp-str/p 12.34 :scale 2))) ; TODO
  (assert (equal "一・二三四" (jp-str/p 12.34 :scale -1)))
  (assert (equal "〇・一二三四" (jp-str/p 12.34 :scale -2)))
  ;; radix-point
  (assert (equal "一二・三四" (jp-str/p 12.34 :radix-point nil)))
  (assert (equal "一二a三四" (jp-str/p 12.34 :radix-point #\a)))
  (assert (equal "一二abc三四" (jp-str/p 12.34 :radix-point "abc")))
  (assert (equal "一二三四abc〇" (jp-str/p 12.34 :radix-point "abc" :scale 2)))
  (assert (equal "〇abc一二三四" (jp-str/p 12.34 :radix-point "abc" :scale -2)))

  ;; 
  t)

(defun test-jp-positional ()
  (and (test-jp-positional-integer-4digits)
       (test-jp-positional-integer-bignums)
       (test-jp-positional-integer-minus)
       (test-jp-positional-rational)
       (test-jp-positional-float)
       (test-jp-positional-fallback)
       (test-jp-positional-parameters)
       t))
